<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on FriendlyTech.io</title>
        <link>/posts/</link>
        <description>Recent content in Posts on FriendlyTech.io</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Wed, 06 Jan 2021 00:00:00 +0000</lastBuildDate>
        <atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>Send Memory Utilization Metrics to CloudWatch</title>
            <link>/posts/aws-cloudwatch-metrics/</link>
            <pubDate>Wed, 06 Jan 2021 00:00:00 +0000</pubDate>
            
            <guid>/posts/aws-cloudwatch-metrics/</guid>
            <description>Below reviews 2 ways to collect extra metrics from an ec2 instance and send to cloudwatch. The first is a procedural, quick n dirty way. The second is the aws preferred way using the cloudwatch agent &amp;amp; agent configuration.
This advice is not production ready but just to get your feet wet.
Quick &amp;lsquo;n Dirty This is a setup for Ubuntu but pretty much everything should transfer to RHEL based. The idea is to have a cron job execute a script that checks free memory then use aws-cli to write to cloudwatch.</description>
            <content type="html"><![CDATA[<p>Below reviews 2 ways to collect extra metrics from an ec2 instance and send to cloudwatch. The first is a procedural, <em>quick n dirty</em> way. The second is the aws preferred way using the cloudwatch agent &amp; agent configuration.</p>
<p>This advice is not production ready but just to get your feet wet.</p>
<h2 id="quick-n-dirty">Quick &lsquo;n Dirty</h2>
<p>This is a setup for Ubuntu but pretty much everything should transfer to RHEL based. The idea is to have a cron job execute a script that checks free memory then use aws-cli to write to cloudwatch. You can extend by generating additional variables and doing more <code>put-metric-data</code> calls.</p>
<ol>
<li>
<p>Setup a role with CloudWatch permissions and attach it to your instance.</p>
</li>
<li>
<p>Install AWS CLI</p>
</li>
<li>
<p>Script, i placed this at <code>~/mem.sh</code> for testing. We retrieve and inject the token to protect against SSRF.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e">#!/usr/bin/env bash
</span><span style="color:#75715e"></span>readonly TOKEN<span style="color:#f92672">=</span><span style="color:#66d9ef">$(</span>curl -X PUT -H <span style="color:#e6db74">&#34;X-aws-ec2-metadata-token-ttl-seconds: 30&#34;</span> <span style="color:#e6db74">&#34;http://169.254.169.254/latest/api/token&#34;</span><span style="color:#66d9ef">)</span>
USEDMEMORY<span style="color:#f92672">=</span><span style="color:#66d9ef">$(</span>free -m | awk <span style="color:#e6db74">&#39;NR==2{printf &#34;%.2f\t&#34;, $3*100/2 }&#39;</span><span style="color:#66d9ef">)</span>
INSTANCE_ID<span style="color:#f92672">=</span><span style="color:#66d9ef">$(</span>curl -H <span style="color:#e6db74">&#34;X-aws-ec2-metadata-token: </span>$TOKEN<span style="color:#e6db74">&#34;</span> http://169.254.169.254/latest/meta-data/instance-id<span style="color:#66d9ef">)</span>
REGION<span style="color:#f92672">=</span><span style="color:#66d9ef">$(</span>curl -H <span style="color:#e6db74">&#34;X-aws-ec2-metadata-token: </span>$TOKEN<span style="color:#e6db74">&#34;</span> -s http://169.254.169.254/latest/dynamic/instance-identity/document | grep <span style="color:#e6db74">&#39;\&#34;region\&#34;&#39;</span> | cut -d<span style="color:#ae81ff">\&#34;</span> -f4<span style="color:#66d9ef">)</span>

aws cloudwatch put-metric-data --metric-name memory-usage --dimensions Instance<span style="color:#f92672">=</span>$INSTANCE_ID --namespace <span style="color:#e6db74">&#34;Custom&#34;</span> --value $USEDMEMORY --region $REGION
</code></pre></div></li>
<li>
<p>Create Cron job: <code>echo '*/5 * * * * ubuntu /home/ubuntu/mem.sh' | sudo tee /etc/cron.d/cw_mem</code></p>
</li>
</ol>
<h2 id="aws-preferred-method">AWS Preferred Method</h2>
<p>AWS publishes a tool, the CloudWatch Agent, which can run as a daemon and publish metrics for you. This requires a configuration file as well as systemd scaffolding. If you install via SSM the systemd files come free and only require minor tweaking.</p>
<ol>
<li>IAM Instance Role:
<ul>
<li>Cloudwatch Permissions</li>
<li>ec2:DescribeTags</li>
</ul>
</li>
<li><a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/download-CloudWatch-Agent-on-EC2-Instance-SSM-first.html">Install Cloudwatch Agent (prefer SSM)</a></li>
<li>Install collectd <code>sudo apt-get update &amp;&amp; sudo apt-get install collectd</code></li>
<li>Populate a configuration file for cloudwatch agent, <a href="https://gist.github.com/csereno/deac72776418173c4f3169b3f34c1246">example</a>. I located my file to <code>/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json</code></li>
<li>start service:
<ul>
<li>manually: <code>sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -m ec2 -a start -c  /opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json</code></li>
<li>Alternatively you can update the unit file located at <code>/etc/systemd/system/amazon-cloudwatch-agent.service</code></li>
</ul>
</li>
</ol>
<p>Thanks to Suriya @ <a href="https://www.youtube.com/watch?v=zwiVogjaaxw">https://www.youtube.com/watch?v=zwiVogjaaxw</a></p>
]]></content>
        </item>
        
        <item>
            <title>Certified Kubernetes Application Developer (CKAD) Exam Tips</title>
            <link>/posts/ckad-tips/</link>
            <pubDate>Tue, 15 Sep 2020 09:19:34 -0400</pubDate>
            
            <guid>/posts/ckad-tips/</guid>
            <description>Prep The first, and most important thing you can do, is understand the platform. If you have never used Kubernetes for any significant period of time, this guide will not help you. I waited until after I had 5+ years of experience before finally deciding to go ahead and grab these certifications. I was able to take the exam, triple check my work, and not feel rushed. However, I only had about 10 minutes to spare at the end.</description>
            <content type="html"><![CDATA[<h1 id="prep">Prep</h1>
<p>The first, and most important thing you can do, is understand the platform. If you have never used Kubernetes for any significant period of time, this guide will not help you. I waited until after I had 5+ years of experience before finally deciding to go ahead and grab these certifications. I was able to take the exam, triple check my work, and not feel rushed. However, I only had about 10 minutes to spare at the end.</p>
<p>For the exam, you are allowed to have one other chrome tab open for official Kubernetes documentation. You should NOT need to reference documentation to figure out what you need to do. If you don&rsquo;t understand the concepts well enough, continue practicing, doing labs, and getting experience. The Kubernetes documentation should only be used for quickly grabbing example YAML to create primitives that cannot be generated, (IE: PersistentVolumes, PersistentVolumeClaims, etc) and adding those objects to Pods.</p>
<h2 id="exercises">Exercises</h2>
<p>Roll through the following exercises and get comfortable with the topics, then try to do them with out referencing the documentation, limit yourself to just <code>kubectl explain</code>. Also look at the commands to see additional ways of doing things. Workflow tweaks can help speed up the time it takes for you to complete a task.</p>
<ul>
<li><a href="https://github.com/dgkanatsios/CKAD-exercises">https://github.com/dgkanatsios/CKAD-exercises</a></li>
</ul>
<h2 id="bookmarks">Bookmarks</h2>
<p>Create a link to the <code>kubectl</code> cheat sheet. Set chrome to always show bookmarks bar.</p>
<p>Create Bookmarks for all Kubernetes Primitives, make sure you are using the heading anchor to take you immediately to the YAML example. This will allow you to quickly grab and modify the YAML.</p>
<h1 id="speed">Speed</h1>
<h2 id="general">General</h2>
<p>Some questions will have you write to a pre-existing file, which you will not have write access to. You can use <code>sudo -i</code> in terminal to avoid needing to elevate privs later on or I prefered to just append <code>| sudo tee -a &lt;pre-created file path&gt;</code> to the command.</p>
<h2 id="shell-tweaks">Shell Tweaks</h2>
<p>Shell stuff to speed up commands:</p>
<p>Alias kubectl to <code>k</code>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e"># Example, add to ~/.bashrc</span>
alias k<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;kubectl&#39;</span>
</code></pre></div><p>For dry runs, you can export a variable and include it on the end of your command:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">export dry<span style="color:#f92672">=</span><span style="color:#e6db74">&#39;--dry-run=client -o yaml&#39;</span>

<span style="color:#75715e"># Use it like</span>
k run nginx --image<span style="color:#f92672">=</span>nginx --restart<span style="color:#f92672">=</span>Never $dry
</code></pre></div><p>Setup <code>kubectl</code> autocompletion:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e"># Example for bash</span>
source &lt; <span style="color:#f92672">(</span>kubectl completion bash<span style="color:#f92672">)</span>
</code></pre></div><h2 id="vim">VIM</h2>
<p>Make sure you know VIM well enough to get around.</p>
<p>Make VIM friendly for YAML editing:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-vim" data-lang="vim"><span style="color:#75715e">&#34; Add to ~/.vimrc, may need to create file</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">et</span>              <span style="color:#75715e">&#34; Expand Tabs</span><span style="color:#960050;background-color:#1e0010">
</span><span style="color:#960050;background-color:#1e0010"></span><span style="color:#a6e22e">set</span> <span style="color:#a6e22e">ts</span>=<span style="color:#ae81ff">2</span> <span style="color:#a6e22e">sw</span>=<span style="color:#ae81ff">2</span> <span style="color:#a6e22e">sts</span>=<span style="color:#ae81ff">2</span> <span style="color:#75715e">&#34; Set TabStop, ShiftWidth, and SoftTabStop to 2</span><span style="color:#960050;background-color:#1e0010">
</span></code></pre></div><p>Quick tips for increasing speed in VIM:</p>
<ul>
<li>Fast save/exit: <code>ZZ</code> (hold shift and hit z key twice)</li>
<li>Delete to end of line: Position cursor and hit <code>D</code> to delete to end of line</li>
<li>To change a word: <code>cw</code> to delete a single word and auto-switch to insert mode. use <code>c[n]w</code> to change a number of works, ie: <code>c2w</code> will wipe out 2 words and put you into insert mode.</li>
<li>Move forward by words: use <code>w</code> to move to start of next word, similarly to above, prefix command w/ a number to move that many number of words over.</li>
<li>Move backwards by words: use <code>b</code>, same situation as above for skipping multiple.</li>
</ul>
<h2 id="kubectl">Kubectl</h2>
<p>Use <code>kubectl</code> to generate YAML, if a primitive cant be created via YAML, use the bookmark to grab an example and modify it. NEVER CREATE FROM SCRATCH.</p>
<p>Use <code>kubectl explain</code> to drill down into resource definitions and find property names you might not be 100% sure of. Example you can&rsquo;t remember if it&rsquo;s storageClass or storageClassName, use <code>k explain pv.spec</code>. Continue to drill down to see additional attributes under that property: <code>k explain pv.spec.storageClassName</code></p>
<p>In cases where you need to add/modify labels or images, use the built-in kubectl commands. It will be faster than doing a <code>kubectl edit &lt;object&gt;</code>.</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash"><span style="color:#75715e"># Labeling</span>
k label deployment/myapp app<span style="color:#f92672">=</span>mapp              <span style="color:#75715e"># Adds a label to a Deployment</span>
k label deployment/myapp app<span style="color:#f92672">=</span>myapp --overwrite <span style="color:#75715e"># Replace a label that may be incorrect</span>

<span style="color:#75715e"># Update Image on Pod</span>
k set image nginx --image<span style="color:#f92672">=</span>nginx:1.7.9
</code></pre></div><p>Use the shorthand notation for Kubernetes API resources when they are available, you can list all resources using <code>kubectl api-resources</code>:</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-bash" data-lang="bash">k api-resources

NAME                              SHORTNAMES   APIGROUP                       NAMESPACED   KIND
bindings                                                                      true         Binding
componentstatuses                 cs                                          false        ComponentStatus
configmaps                        cm                                          true         ConfigMap
endpoints                         ep                                          true         Endpoints
events                            ev                                          true         Event
...

<span style="color:#75715e"># Example command</span>
k get pv,pvc -n mynamespace
</code></pre></div><h1 id="gotchas">Gotcha&rsquo;s</h1>
<p>The only snag I hit was when adding configMap to a Pod template as a volumeMount. I created the configMap and set all the definitions but didn&rsquo;t pay attention to one of the other containers in the pod and missed there was already a volume spec created for the pod. Since the existing volume was further down in the YAML it took precedence over the volume spec I wrote. This created some confusing error messages saying it could not find the volume defined in my volumeMount. Pay attention to the entire object YAML definition and make sure you arent duplicating a property thats already defined.</p>
<p>In all of the clusters, there are pre-existing objects. If you need to modify one, TAKE A BACKUP. If you delete a resource and then realize you want to set it back to its previous state, you will have no way to get it back if you didn&rsquo;t save it off first. Also be careful what resources you are deleting and not removing something from a previous question.</p>
<h2 id="plan-of-attack">Plan of Attack</h2>
<p>At this point you should know your weaknesses, if you bump into a question that you cannot immediately resolve due to one of these weaknesses, flag it, and skip, come back to it later in your spare time.</p>
<p>Take time to READ THE ENTIRE QUESTION, there may be information further down that you need to be successful.</p>
<p>Use your notepad to paste in commands that you are frequently using so you can quickly refer back to them or paste them in.</p>
<h1 id="test-day">Test Day</h1>
<p>Use the following task list to get ready for your exam:</p>
<ul>
<li><input disabled="" type="checkbox"> Have required identification handy.</li>
<li><input disabled="" type="checkbox"> Have a large enough clear glass of water nearby. If you need a beer, coffee, soda, do not drink it during the exam. Have it before and save the beer to celebrate afterwards.</li>
<li><input disabled="" type="checkbox"> Ensure everyone knows not to disturb you.</li>
<li><input disabled="" type="checkbox"> Ensure desk is clean and no papers, misc electronics.</li>
<li><input disabled="" type="checkbox"> Ensure all tasks are completed in portal (minus actually taking the exam).</li>
<li><input disabled="" type="checkbox"> Triple check Webcam and Mic are working properly, confirm compatibility on test portal site.</li>
<li><input disabled="" type="checkbox"> Close/Lock door, hang a sign for a friendly reminder to those who may forget.</li>
<li><input disabled="" type="checkbox"> Make sure cellphone is in a different area and will not break concentration if it rings.</li>
<li><input disabled="" type="checkbox"> Close all applications other than chrome and ensure notifications are stopped for your host operating system.</li>
</ul>
]]></content>
        </item>
        
    </channel>
</rss>
